#include <header.hxx>
#define SON8_OVERGLAD_INCLUDE_DEPRECATED
#include <son8/overglad/v1_1.hxx>

const auto Window_Width = 350;
const auto Window_Height = 150;

void display();
void init();

int main()
{
    app::Windowed window( {
        app::Config::Width{ Window_Width },
        app::Config::Height{ Window_Height },
        SON8_OVERGLAD_VERSION
    } );
    init( );
    window.run( display );
}

void display()
{
    GLubyte fly[ ] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x03, 0x80, 0x01, 0xC0, 0x06, 0xC0, 0x03, 0x60,
        0x04, 0x60, 0x06, 0x20, 0x04, 0x30, 0x0C, 0x20,
        0x04, 0x18, 0x18, 0x20, 0x04, 0x0C, 0x30, 0x20,
        0x04, 0x06, 0x60, 0x20, 0x44, 0x03, 0xC0, 0x22,
        0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
        0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
        0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
        0x66, 0x01, 0x80, 0x66, 0x33, 0x01, 0x80, 0xCC,
        0x19, 0x81, 0x81, 0x98, 0x0C, 0xC1, 0x83, 0x30,
        0x07, 0xE1, 0x87, 0xE0, 0x03, 0x3F, 0xFC, 0xC0,
        0x03, 0x31, 0x8C, 0xC0, 0x03, 0x33, 0xCC, 0xC0,
        0x06, 0x64, 0x26, 0x60, 0x0C, 0xCC, 0x33, 0x30,
        0x18, 0xCC, 0x33, 0x18, 0x10, 0xC4, 0x23, 0x08,
        0x10, 0x63, 0xC6, 0x08, 0x10, 0x30, 0x0C, 0x08,
        0x10, 0x18, 0x18, 0x08, 0x10, 0x00, 0x00, 0x08,
    };

    GLubyte halftone[] = {
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55
    };

    gl::clear( gle::Clearbit::Color );
    gl::color( 1.f, 0.f, 1.f );
    gl::rect( 25.f, 25.f, 125.f, 125.f );
    gl::enable( gle::Capability::Polygon_Stipple );
    glPolygonStipple( fly );
    gl::rect( 150.f, 25.f, 225.f, 125.f );
    glPolygonStipple( halftone );
    gl::rect( 225.f, 25.f, 325.f, 125.f );
    gl::disable( gle::Capability::Polygon_Stipple );
    gl::flush( );
}

void init()
{
    gl::viewport( 0, 0, Window_Width, Window_Height );
    gl::ortho( 0.0, Window_Width * 1.f, 0.0, Window_Height * 1.f, -1.0, 1.0 );
    gl::clear_color( 0.f, 0.f );
    glShadeModel( GL_FLAT );
}
